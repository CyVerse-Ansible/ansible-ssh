---

### cso-ssh.yml ###

- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_distribution }}.yml"
    - "defaults.yml"
  tags: vars

- name: install ssh server
  package: name={{ item }} state=present
  with_items: '{{ PACKAGES }}'
  tags: install

- name: copy motd.ssh
  copy: src=files/motd dest=/etc/motd.ssh mode=0444
  tags: copy-motd

- name: configure ssh
  template: src={{ item }} dest={{ SSH_CONFIG }} backup=yes
  with_first_found:
    - "templates/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.sshd_config.j2"
    - "templates/{{ ansible_distribution }}.sshd_config.j2"
    - "templates/{{ ansible_os_family }}.sshd_config.j2"
    - "templates/default.sshd_config.j2"
  tags: template-sshd-config

- name: make sure ssh directory exists
  file: path=/root/.ssh/ state=directory mode="0700"
  tags: create-root-ssh-dir

- name: add ssh keys to authorized_keys
  authorized_key: user=root key="{{ item }}" state=present
  with_items: "{{ SSHKEYS | default([]) }}"
  tags: add-ssh-keys

- name: remove ssh keys from authorized_keys
  authorized_key: user=root key="{{ item }}" state=absent
  with_items: "{{ SSH_KEYS_REMOVE | default([]) }}"
  tags: remove-ssh-keys

- name: disable selinux
  selinux: state=disabled
  when: ansible_os_family == "RedHat"
  tags: disable-centos-selinux

- name: add ssh port to selinux
  command: semanage port -a -t ssh_port_t -p tcp {{ SSH_PORT }}
  when: ansible_os_family == "RedHat" and {{ SSH_PORT }} != '22'
  ignore_errors: yes
  tags: add-ssh-port-semanage

- name: remove old ssh port to selinux (if applicable)
  command: semanage port -d -t ssh_port_t -p tcp 22
  when: ansible_os_family == "RedHat" and {{ SSH_PORT }} != '22'
  ignore_errors: yes
  tags: remove-old-ssh-port-semanage

- name: restart ssh service
  service: name={{ SSHD }} state=restarted enabled=yes
  tags: restart-ssh

### cso-ssh-key-setup.yml ###

- name: generate ssh keys
  user: name=root generate_ssh_key=yes ssh_key_bits=4096 ssh_key_file=.ssh/id_rsa

- name: retrieve remote ssh public key
  fetch: dest="/tmp/{{ ansible_hostname }}.pub" src="~/.ssh/id_rsa.pub" flat=yes

- name: distribute keys to all hosts
  authorized_key: >
    key="{{ lookup('file', '/tmp/'+ item +'.pub') }}"
    state=present
    user=root
  with_items: "groups['{{ SSH_CONFIG.group | default([])}}']"
  ignore_errors: yes

- name: remove temp local pubkey copies
  local_action: file dest="/tmp/{{ ansible_hostname }}.pub" state=absent
  ignore_errors: yes
  